{% extends 'IndigoUIBundle:Share:_base.html.twig' %}

{% block title %}{{ 'time_reservation.time_reservation'|trans }}{% endblock %}

{% block style %}
    {{ parent() }}
    <link href="{{ asset('bundles/indigomain/bower_components/eternicode-bootstrap-datepicker/dist/css/bootstrap-datepicker3.min.css') }}" rel="stylesheet" type="text/css"/>
    <style>
        #timeReservationTable tr td{
            cursor:pointer;
        }

        #timeReservationTable tr td:hover{
            background-color:#5EBD5E;
            color:#fff;
        }
        .panel{
            color:#555;
        }
        .panel label{
            padding-right:5px;
        }
    </style>
{% endblock %}

{% block content %}

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12 col-sm-8 col-sm-offset-2">
            <h1>{{ 'time_reservation.time_reservation'|trans ~ ' : ' ~ contest_title|capitalize }}</h1>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h3 class="panel-title"><strong>{{ 'time_reservation.choose_time'|trans }}</strong></h3>
                </div>
                <div class="panel-body">
                    <div class="form-group col-xs-12">
                        {% for flashMessage in app.session.flashbag.get('danger') %}
                            <div class="flash-danger alert alert-danger" role="alert">
                                <strong>{{ flashMessage }}</strong>
                            </div>
                        {% endfor %}
                    </div>

                    {% if not errorMsg %}

                    <div class="col-xs-12">

                        <div class="form-group">
                            <div class="col-xs-6 col-sm-10">
                                {{ form_start(datePickerForm) }}
                                {{ form_widget(datePickerForm.reservationDate, {'attr' : {'placeholder' : timestampPagination|date("Y-m-d")}}) }}
                                {{ form_end(datePickerForm) }}
                            </div>
                            <div class="col-xs-6 col-sm-2">
                                {{ form_start(form) }}
                                {{ form_widget(form.submit) }}
                                {{ form_end(form) }}
                            </div>
                        </div>
                    </div>

                    {% set time_interval = constant('Indigo\\GameBundle\\Entity\\GameTimeRepository::TIME_INTERVAL') %} {# laiko intervalas 15 minuciu #}

                    <div class="table-responsive col-xs-12">
                        <table class="table table-bordered" id="timeReservationTable">
                            {% for i in 8..21 %}
                                <tr>
                                    {% for x in 1..4 %}
                                        {% set first_interval_number = x*time_interval-time_interval %}
                                        {% set second_interval_number = x*time_interval %}

                                        {% if not first_interval_number %}
                                            {% set first_interval_number = '00' %}
                                        {% endif %}

                                        {% set second_interval_numberCorrected = second_interval_number %}

                                        {% if second_interval_number == 60 %}
                                            {% set second_interval_numberCorrected = '00' %}
                                        {% endif %}

                                        {% set i_second = i %}
                                        {% if x == 4 %}
                                            {% set i_second = i+1 %}
                                        {% endif %}

                                        <td id="{{ i }}" data-time="{{ date(timestampPagination|date("Y-m-d") ~ i ~ ':' ~ first_interval_number).timestamp }}">
                                            {{ i }}:{{ first_interval_number }} - {{ i_second }}:{{ second_interval_numberCorrected }}
                                        </td>
                                    {% endfor %}
                                </tr>
                            {% endfor %}
                        </table>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block script %}
    {% set time_interval = constant('Indigo\\GameBundle\\Entity\\GameTimeRepository::TIME_INTERVAL') %} {# laiko intervalas 15 minuciu #}
    {% set interval_for_next_click = constant('Indigo\\GameBundle\\Entity\\GameTimeRepository::INTERVAL_FOR_NEXT_CLICK') %} {# laiko intevalas iki kito leistino paspaudimo #}

    {{ parent() }}

    <script src="{{ asset('bundles/indigomain/bower_components/eternicode-bootstrap-datepicker/js/bootstrap-datepicker.js') }}"></script>
    <script src="{{ asset('bundles/indigomain/bower_components/eternicode-bootstrap-datepicker/js/locales/bootstrap-datepicker.') }}{{ app.request.getLocale() }}.js"></script>

    <script>
        $('#form_reservationDate').datepicker({
         todayHighlight: true,
         autoclose: false,
         language: '{{ app.request.getLocale() }}',
         startDate: new Date()
         }).on('changeDate', function(ev){
            //alert(JSON.stringify(ev));
            //alert(new Date(ev.date).getTime()/1000);
            var timestampPagination = new Date(ev.date).getTime()/1000+39600; //+11 hour
            location.href = '{{ url('indigo_time_reservation', {'contest_id' : contest_id}) }}/'+timestampPagination;
        });

        var lastClickedTime;
        $('#timeReservationTable tr td').click(function() {
            if($(this).is(':not(.bg-success)') && $(this).is(':not(.bg-danger)') && $(this).is(':not(.reserving)')){

                $.ajax({
                    type: 'GET',
                    data: {time : $(this).data('time')},
                    url: '{{ url('indigo_insert_data_after_time_click', {'contest_id' : contest_id, 'timestamp' : timestampPagination}) }}',
                    success: function(response) {
                        if (response.success) {

                        }else{
                            $.growl.warning({
                                title: '{{ 'warning'|trans }}',
                                message: '{{ 'time_reservation.reserving_this_moment'|trans }}'
                            });
                        }
                    }
                });

                $('#form_startAt').val($(this).text().trim()).attr({'data-time' : $(this).data('time')});//add time interval to input
                $('#timeReservationTable tr td.bg-warning#'+lastClickedTime).removeClass('bg-warning');
                $(this).addClass('bg-warning');
                lastClickedTime = $(this).attr('id');
            }
        }).dblclick(function(){
            if($(this).is('.bg-success')){
                var _this = $(this);
                $.ajax({
                    type: 'GET',
                    data: {time : $(this).data('time')},
                    url: '{{ url('indigo_delete_time_reservation', {'contest_id' : contest_id, 'timestamp' : timestampPagination}) }}',
                    success: function(response) {
                        if (response.success) {
                            $.growl.notice({
                                title: '{{ 'notice'|trans }}',
                                message: '{{ 'time_reservation.deleted'|trans }}'
                            });
                            _this.removeClass('bg-success');
                        }else{
                            $.growl.error({
                                title: '{{ 'error'|trans }}',
                                message: '{{ 'time_reservation.not_deleted'|trans }}'
                            });
                        }
                    }
                });
            }
        });

        ////////////////////////////////////////////////////////
        function refreshingTimeReservationData() {
            var dataArray = new Array();

            function getJSONDataToArray() {
                var dataArray = new Array();
                $.ajax({
                    type: 'GET',
                    url: '{{ url('indigo_get_list_of_dates', {'contest_id' : contest_id, 'timestamp' : timestampPagination}) }}',
                    dataType: 'json',
                    async: false,
                    cache: false,
                    success: function (response) {
                        var jsonString = JSON.stringify(response);
                        //alert(jsonString);
                        dataArray = $.parseJSON(jsonString); //dataArray[0]['id']
                    }
                });
                return dataArray;
            }

            dataArray = getJSONDataToArray();


            var responseArray = new Array();

            function getJSONResponseDataToArray() {
                var responseArray = new Array();
                $.ajax({
                    type: 'GET',
                    url: '{{ url('indigo_get_last_time_cell_date', {'contest_id' : contest_id, 'timestamp' : timestampPagination}) }}',
                    dataType: 'json',
                    async: false,
                    cache: false,
                    success: function (response) {
                        var jsonString = JSON.stringify(response);
                        //alert(jsonString);
                        responseArray = $.parseJSON(jsonString); //dataArray[0]['id']
                    }
                });
                return responseArray;
            }

            responseArray = getJSONResponseDataToArray();

            $('#timeReservationTable tr td').each(function () {
                var dateNow = (new Date().getTime()) / 1000; //timestamp
                var fieldDate = $(this).data('time') + {{ time_interval }} * 60; //timestamp

                for (var i = 0; i < dataArray.length; i++) {
                    var finishAtStringFromArraySplit = dataArray[i]['finishAt']['date'].split('.');
                    var finishAtStringToNumberFromArray = (new Date(finishAtStringFromArraySplit[0].replace(/-/g, '/')).getTime() / 1000);
                    var action = dataArray[i]['action'];

                    if(fieldDate > dateNow) {
                        if (fieldDate == finishAtStringToNumberFromArray && action == 1) {
                            if (dataArray[i]['timeOwner'] == {{ user_id }}) {
                                if (dataArray[i]['contestId'] == {{ contest_id }})
                                    $(this).addClass('bg-success').attr({'title': '{{ 'time_reservation.your_time'|trans }}'});
                                else
                                    $(this).addClass('bg-success').attr({'title': '{{ 'time_reservation.same_time'|trans }}'});
                            }else{
                                $(this).addClass('bg-danger').attr({'title': '{{ 'time_reservation.table_reserved'|trans }}'});
                            }
                        } else if (fieldDate == finishAtStringToNumberFromArray && action == 0) {
                            $(this).removeClass('bg-success bg-danger').attr({'title': ''});
                        }
                    }else{
                        $(this).addClass('bg-danger').attr({'title': '{{ 'time_reservation.time_passed'|trans }}'});
                    }
                }

                for (var i = 0; i < responseArray.length; i++) {
                    var finishAtStringFromArraySplit = responseArray[i]['finishAt']['date'].split('.');
                    var finishAtStringToNumberFromArray = (new Date(finishAtStringFromArraySplit[0].replace(/-/g, '/')).getTime() / 1000);
                    var timeOwner = responseArray[i]['timeOwner'];

                    var responseInsertionTime = (new Date(responseArray[i]['insertionTime'].replace(/-/g, '/')).getTime() / 1000) + {{ interval_for_next_click }} * 60;

                    if (fieldDate == finishAtStringToNumberFromArray && dateNow < responseInsertionTime && action == 0 && timeOwner != {{ user_id }})
                        $(this).addClass('bg-warning reserving').click(false).attr({'title': '{{ 'time_reservation.reserving_this_moment'|trans }}'});
                    else if(fieldDate == finishAtStringToNumberFromArray && dateNow >= responseInsertionTime && action == 0 && timeOwner != {{ user_id }})
                        $(this).removeClass('bg-warning reserving').click(true).attr({'title': ''});
                }
            });
        };
        ////////////////////////////////////////////
        refreshingTimeReservationData();
        setInterval(function(){
            refreshingTimeReservationData()
        }, 15000);

        $('#form_submit').click(function(){
            if($("#form_startAt").val()) {
                $.ajax({
                    type: 'GET',
                    url: '{{ url('indigo_change_action_of_reservation', {'contest_id' : contest_id, 'timestamp' : timestampPagination}) }}',
                    dataType: 'json',
                    data: {time: $('#form_startAt').data('time')},
                    async: false,
                    cache: false,
                    success: function (response) {
                        if (response.success) {
                            $.growl.notice({
                                title: '{{ 'notice'|trans }}',
                                message: '{{ 'time_reservation.success'|trans }}'
                            });
                            location.reload();
                        } else {
                            $.growl.error({
                                title: '{{ 'error'|trans }}',
                                message: '{{ 'time_reservation.table_reserved'|trans }}'
                            });
                            location.reload();
                        }
                    }
                });
            }else{
                $.growl.warning({
                    title: '{{ 'warning'|trans }}',
                    message: '{{ 'time_reservation.not_selected'|trans }}'
                });
            }
        });
    </script>
{% endblock %}

