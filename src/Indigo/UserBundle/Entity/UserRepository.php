<?php

namespace Indigo\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Security\Core\User\UserInterface;
use Symfony\Component\Security\Core\User\UserProviderInterface;
use Symfony\Component\Security\Core\Exception\UsernameNotFoundException;
use Symfony\Component\Security\Core\Exception\UnsupportedUserException;
use Doctrine\ORM\NoResultException;
/**
 * SignInRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository implements UserProviderInterface
{

/*    public function getPlayerWithTeamsByCardId($cardId)
    {
        $playerEntity = null;

        try {
            $qb = $this->_em->createQueryBuilder();
            $qb
                ->select('u, partial t.{id}')
                ->from('IndigoUserBundle:User', 'u')
                ->join('y u.teams', 't')
                ->andWhere('u.cardId = :cid')
                ->setParameter('cid', $cardId);

            $playerEntity = $qb->getQuery()->getSingleResult();
        } catch (NoResultException $ex) {

            return false;
        }

        return $playerEntity;
    }*/


    public function loadUserByUsername($username)
    {
        $q = $this
            ->createQueryBuilder('u')
            ->where('u.username = :username OR u.email = :email')
            ->setParameter('username', $username)
            ->setParameter('email', $username)
            ->getQuery();

        try {
            // The Query::getSingleResult() method throws an exception
            // if there is no record matching the criteria.
            $user = $q->getSingleResult();
        } catch (NoResultException $e) {
            $message = sprintf(
                'Unable to find an active IndigoUserBundle:User object identified by "%s".',
                $username
            );
            throw new UsernameNotFoundException($message, 0, $e);
        }

        return $user;
    }

    public function refreshUser(UserInterface $user)
    {
        $class = get_class($user);
        if (!$this->supportsClass($class)) {
            throw new UnsupportedUserException(
                sprintf(
                    'Instances of "%s" are not supported.',
                    $class
                )
            );
        }

        return $this->find($user->getId());
    }

    public function supportsClass($class)
    {
        return $this->getEntityName() === $class
        || is_subclass_of($class, $this->getEntityName());
    }
//
//    /**
//     * @return array
//     */
//    public function getUser($email, $password)
//    {
//        $qb = $this->_em->createQueryBuilder();
//        //createQuery("SELECT `id` FROM IndigoUserBundle:User WHERE `email`=")
//        $qb
//            ->select('u.id')
//            ->from('IndigoUserBundle:User','u')
//            ->where("u.email= :email")
//            ->andWhere("u.password = :password")
//            ->setParameters([
//                    'email' => $email,
//                    'password' => md5($password)
//            ]);
//
//
//        $query = $qb->getQuery();
//
//        return $query->getArrayResult();
//    }
//
//
//    /**
//     * @return array
//     */
//    public function userExists($email)
//    {
//        $qb = $this->_em->createQueryBuilder();
//
//        $qb
//            ->select('u.id')
//            ->from('IndigoUserBundle:User','u')
//            ->where("u.email= :email")
//            ->setParameter('email', $email );
//        $query = $qb->getQuery();
//
//        return $query->getArrayResult();
//    }
}
